# Generated by Django 2.1.7 on 2019-03-22 21:41

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Asset',
            fields=[
                ('name', models.CharField(help_text='Enter an asset (e.g. Crytocurrency)', max_length=100, primary_key=True, serialize=False)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Holdings',
            fields=[
                ('ticker', models.CharField(help_text='Enter the ticker for this transaction', max_length=5, primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(help_text='Enter the quantity for this transaction', validators=[django.core.validators.MinValueValidator(1)])),
            ],
            options={
                'ordering': ['ticker'],
            },
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('name', models.CharField(help_text='Enter a league name', max_length=32, primary_key=True, serialize=False)),
                ('startingBalance', models.DecimalField(decimal_places=2, help_text='Enter the starting balance of the league', max_digits=11)),
                ('startDate', models.DateField(help_text='Enter a starting date for the league')),
                ('endDate', models.DateField(help_text='Enter a ending date for the league')),
                ('public', models.BooleanField(default=True, help_text='Select true for public league.')),
                ('description', models.TextField(help_text='Enter a brief description of the league', max_length=1000)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='league_admin', to=settings.AUTH_USER_MODEL)),
                ('players', models.ManyToManyField(blank=True, related_name='league_players', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PendingTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this transaction', primary_key=True, serialize=False)),
                ('ticker', models.CharField(help_text='Enter the ticker for this transaction', max_length=5)),
                ('transactionStatus', models.CharField(choices=[('q', 'Queued'), ('p', 'Placed')], help_text='Transaction status', max_length=1)),
                ('submittedDateTime', models.DateTimeField(help_text='Enter the submitted date & time for this transaction')),
                ('price1', models.DecimalField(blank=True, decimal_places=2, help_text='Enter the price for this transaction', max_digits=11, null=True)),
                ('price2', models.DecimalField(blank=True, decimal_places=2, help_text='Enter the triggering price for this transaction', max_digits=11, null=True)),
                ('quantity', models.IntegerField(help_text='Enter the quantity for this transaction', validators=[django.core.validators.MinValueValidator(1)])),
                ('asset', models.ForeignKey(help_text='Select an asset for this transaction', on_delete=django.db.models.deletion.CASCADE, to='ttt.Asset')),
                ('league', models.ForeignKey(help_text='Select a league for this transaction', on_delete=django.db.models.deletion.CASCADE, to='ttt.League')),
                ('player', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this transaction', primary_key=True, serialize=False)),
                ('cash', models.DecimalField(blank=True, decimal_places=2, help_text='Current amount for player', max_digits=11, null=True)),
                ('league', models.ForeignKey(help_text='Select a league for this transaction', on_delete=django.db.models.deletion.CASCADE, to='ttt.League')),
                ('player', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ttt.Holdings')),
            ],
            options={
                'ordering': ['player', 'league'],
            },
        ),
        migrations.CreateModel(
            name='TimeInForce',
            fields=[
                ('name', models.CharField(help_text='Enter a time in force (e.g. Good-til-canceled)', max_length=100, primary_key=True, serialize=False)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TransactionHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, help_text='Unique ID for this transaction', primary_key=True, serialize=False)),
                ('ticker', models.CharField(help_text='Enter the ticker for this transaction', max_length=5)),
                ('transactionStatus', models.CharField(choices=[('f', 'Fulfilled'), ('c', 'Canceled')], help_text='Transaction status', max_length=1)),
                ('submittedDateTime', models.DateTimeField(help_text='Enter the submitted date & time for this transaction')),
                ('fulfilledDateTime', models.DateTimeField(help_text='Enter the fulfilled date & time for this transaction')),
                ('price1', models.DecimalField(decimal_places=2, help_text='Enter the price for this transaction', max_digits=11)),
                ('price2', models.DecimalField(blank=True, decimal_places=2, help_text='Enter the triggering price for this transaction', max_digits=11, null=True)),
                ('quantity', models.IntegerField(help_text='Enter the quantity for this transaction', validators=[django.core.validators.MinValueValidator(1)])),
                ('total', models.DecimalField(decimal_places=2, help_text='Enter the total price for this transaction', max_digits=11)),
                ('asset', models.ForeignKey(help_text='Select an asset for this transaction', on_delete=django.db.models.deletion.CASCADE, to='ttt.Asset')),
                ('league', models.ForeignKey(help_text='Select a league for this transaction', on_delete=django.db.models.deletion.CASCADE, to='ttt.League')),
                ('player', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('timeInForce', models.ForeignKey(help_text='Select a time in force for this transaction', on_delete=django.db.models.deletion.CASCADE, to='ttt.TimeInForce')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='TransactionType',
            fields=[
                ('name', models.CharField(help_text='Enter a transaction type (e.g. Limit Sell)', max_length=100, primary_key=True, serialize=False)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='transactionhistory',
            name='transactionType',
            field=models.ForeignKey(help_text='Select a transaction type for this transaction', on_delete=django.db.models.deletion.CASCADE, to='ttt.TransactionType'),
        ),
        migrations.AddField(
            model_name='pendingtransaction',
            name='timeInForce',
            field=models.ForeignKey(help_text='Select a time in force for this transaction', on_delete=django.db.models.deletion.CASCADE, to='ttt.TimeInForce'),
        ),
        migrations.AddField(
            model_name='pendingtransaction',
            name='transactionType',
            field=models.ForeignKey(help_text='Select a transaction type for this transaction', on_delete=django.db.models.deletion.CASCADE, to='ttt.TransactionType'),
        ),
    ]
